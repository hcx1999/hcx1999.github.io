import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as e,o as n}from"./app-DGYHLKBG.js";const a={},c={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},m={style:{"vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"18762.896ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 8293200 950","aria-hidden":"true"};function h(g,t){return n(),i("div",null,[e("mjx-container",c,[(n(),i("svg",m,t[0]||(t[0]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"merror","data-mjx-error":"Unknown environment 'abstract'",title:"Unknown environment 'abstract'"},[e("rect",{"data-background":"true",width:"8293200",height:"950",y:"-200"}),e("title",null,"Unknown environment 'abstract'"),e("g",{"data-mml-node":"mtext",style:{"font-family":"serif"}},[e("text",{"data-variant":"-explicitFont",transform:"scale(1,-1)","font-size":"884px"}," \\begin{abstract} 穿越沙漠是一项在规定时间内到达终点，并最终保留尽可能多资金的游戏。 本文对穿越沙漠的最优策略进行研究，分析挖矿天数及其在起点和村庄所需购买 物资的数量，针对不同天气讨论是否停留、挖矿、行走的最佳决策。 \\textbf{对于问题一：}分析了经过或不经过村庄和矿山两种情况。 若不经过矿山和村庄，只需利用Dijkstra 算法找出起点到终点的最短路径； 若经过矿山，则需考虑途中物资是否充足，根据尽可能在原点多买食物， 而在村庄多买水的原则，得出水和食物的购买比例， 同时分段计算最短路径，然后分析并讨论连续挖矿、 来回挖矿等多种情况下所带来的收益关系， 求解剩余资金量的最大值，结果见表。 \\textbf{对于问题二：}由于天气未知，若不经过矿山， 则高温天停留的条件是停留多少天，须等来多少天晴天； 若经过矿山，则需考虑高温天停留对原本可在矿山挖矿的晴天天数的影响。 通过比较晴天、高温天气下停留、行走、挖矿的消耗和收益 ，根据问题二建立的数学模型，讨论了分段行走的路径中高温天气是否停留和 挖矿天数等不同情况下最终剩余资金量，通过比较得出玩家行走的最佳策略。 \\textbf{对于问题三：}基于游戏规则和第五、六关的已知条件， 不同玩家尽可能不要在路上相遇，由高温天气是否停留， 可找出不同的行走路线或同一行走路线不同行走策略， 通过归纳推理，对比不同玩家采用不同的路线策略，算出所有玩家所剩资金总数。 综上所述，本文综合分析了穿越沙漠时在不同路径，不同天气下是否停留、 行走、挖矿，并找出最终剩余资金量尽可能多的情况。 \\textbf{关键词: 穿越沙漠路线，Dijkstra 算法，归纳推理，最优策略} \\end{abstract} \\section{问题重述} 穿越沙漠是如下一项游戏：玩家每关凭借一张地图，共有六关。起点处用初始资金 10000元购买水和食物， 途中会遇到不同的天气，也可在矿山、村庄补充 资金或资源， 目标是在规定时间内到达终点，并保留尽可能多的资金。 游戏规则如下： 以天为基本时间单位，游戏开始时间为第 0 天，玩家位于起点。 必须在截止 日期或之前到达终点，否则游戏失败。 穿越沙漠需水和食物两种资源，最小计量单位均为箱， 水和食物质量之和不能超过负重上限 1200 千克。 若未到达终点而水或食物已耗尽，游戏失败。 每日天气为“晴朗”、“高温”、“沙暴”三种状况之一，沙漠中所有区域 的天气一致。 每日可从地图中的某个区域到其邻接区域，亦可在原地停留。沙暴日当天必须停留。 可停留或重返起点，但不可多次在起点购买资源。 在原地停留一天消耗的资源量称作基础消耗量， 行走一天消耗基础量的2 倍。到达终点后可按基准价格的一半退回剩余资源。 在矿山停留时，任何天气下均可通过挖矿获取资金，挖矿一天所获得的资金 量称为基础收益1000 元。如果挖矿，消耗的资源量为基础消耗量的3 倍；不挖 矿消耗的资源量等同于基础消耗量。到达矿山当天不可挖矿。 途经村庄时可购买水和食物，每箱价格为基准价格的2 倍。 根据游戏的不同设定，建立数学模型，尝试解决以下问题： \\textbf{·} 在整个游戏时段内每天天气状况事先全部已知，给出一般情况下第一关 和第二关中玩家的最优策略。 \\textbf{·} 玩家仅知道当天的天气状况，据此决定当天的行动方案，给出一般情况 下第三关和第四关中玩家的最佳策略。 \\textbf{·}多名玩家共同参与，每名玩家的行动方案需在第0 天确定且此后不可更改。 试给出一般情况下第五关中玩家应采取的策略。 \\textbf{·} 从第1天起，每名玩家在当天行动结束后均知道其余玩家当天行动方案和 剩余资源数量，随后确定各自第二天的行动方案。给出一般情况下第六关中玩家 应采取的策略。 综合上述问题，简化过程，设计模型，查阅相关文献，分析穿越沙漠的合理 策略。得到几种到达相同终点，途经不同并经点（包含村庄、矿山）的最短路线； 分析并确认是否在村庄购买补给、在矿山挖矿等决策；通过归纳推理和基本演绎 探究玩家的行走决策与最终资金收益之间的关系。结合以上分析与研究成果，撰 写一篇研究论文。 \\section{模型假设} \\begin{enumerate} \\item 假设第一关至第四关中只有一名玩家。 \\item 假设第五关和第六关中有n 名玩家。 \\item 假设第五关中每天天气状况事先全部已知。 \\item 假设第六关中所有玩家仅知道当天的天气状况。 \\end{enumerate} \\section{符号定义及说明} \\begin{center} \\begin{tabular}[垂直对齐]{c|c} \\toprule 符号\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 说明\\\\ \\midrule $ W_{0} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 起始资金\\\\ $ W $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 剩余资金\\\\ $ P_{1} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 水价格\\\\ $ P_{2} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 食物价格\\\\ $ m_{1} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 消耗水的质量\\\\ $ m_{2} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 消耗食物的质量\\\\ $ m_{3} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 起点买水质量\\\\ $ m_{4} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 起点买食物质量\\\\ $ m_{5} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 村庄买水质量\\\\ $ m_{6} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 村庄买食物质量\\\\ $ \\bigtriangleup m $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 补给量\\\\ $ n $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 挖矿天数\\\\ \\bottomrule \\end{tabular} \\end{center} \\section{已知天气状况下穿越沙漠的最佳决策模型} \\subsection{模型分析} 要求玩家在规定时间内到达终点的同时拥有尽可能多的资金的情况下，给出通关的最优策略。 为了使到达终点得到的资金尽可能多，需分类讨论以下几种情形： \\textbf{·} 沙暴天气外是否考虑在区域停留； \\textbf{·} 规定时间到达终点的情况下是否经过村庄； \\textbf{·} 经过村庄是否补给； \\textbf{·} 经过矿山是否挖矿； \\textbf{·} 是否尽可能多地在矿山挖矿。 挖矿必定会损耗更多的水和食物，一旦消耗过多以至无法达到终点，就需在 村庄以基准价格的2 倍补给食物和水，因此，在起点时应尽量将价格相比于水更 贵的食物购买充足，在村庄补给时购买较为便宜的水，进而达到减少资金消耗。 \\subsection{模型的建立与求解} \\subsubsection{第一关模型求解:} \\begin{enumerate} \\item \\textbf{是否考虑停留问题} 假设一种简单情况：起点开始从区域1 去往区域2，第1 天为高温，第2 天 为晴朗，若第1 天停留，第2 天再从区域1 到区域2：消耗水和食物质量分别为 $ m_{1} = 90 $ (kg), $ m_{2} = 200 $ (kg)，总计 290kg；若第 1 天行走： 消耗水和食物质量分别为 $ m_{1} = 80 $ (kg), $ m_{2} = 120 $ (kg)，总计 200kg。 行走所消耗的质量200kg < 停留所消耗的质 量290kg，因此不考虑停留。 \\item \\textbf{路线问题} 已知地图中有公共边界的两个区域称为相邻， 仅有公共顶点而没有公共边界的两个区域不视作相邻。通过遍历所有邻接结 点，可绘制各地图中所有的有效路线，如图1 所示。 通过Dijkstra 算法寻找指定任意起点和终点之间的最短路径（路径越短，物 资消耗越少）。本文将列举几种经典的路径，如表1 所示。着重分析和比较途径 村庄和矿山的决策方案，取到达终点时资金剩余量最大的方案作为该关卡的最优策略。 \\begin{figure}[H] \\centering \\includegraphics[width=0.45\\textwidth,height=0.35\\textheight]{路线图} \\caption{第一关地图路线绘制} \\end{figure} \\begin{table}[H] \\centering \\caption{第一关的几种经典路线} \\begin{tabular}{|c|c|c|l|c|} \\hline \\multicolumn{5}{|c|}{第一关} \\\\ \\hline 起点 & 终点 & \\multicolumn{2}{c|}{最短路线} & 路线长度 \\\\ \\hline 1 & 27 & \\multicolumn{2}{c|}{1 → 25 → 26 → 27} & 3 \\\\ \\hline 1 & 15 & \\multicolumn{2}{c|}{1 → 25 → 24 → 23 → 22 → 9 → 15} & 6 \\\\ \\hline 1 & 12 & \\multicolumn{2}{c|}{\\begin{tabular}[c]{@{}c@{}}1 → 25 → 24 → 23 → 22 → 9 → 10 → 11 → 12\\\\ 1 → 25 → 24 → 23 → 21 → 9 → 15 → 13 → 12\\\\ 1 → 25 → 24 → 23 → 22 → 9 → 15 → 13 → 12\\end{tabular}} & 8 \\\\ \\hline 12 & 27 & \\multicolumn{2}{c|}{\\begin{tabular}[c]{@{}c@{}}12 → 13 → 15 → 9 → 21 → 27\\\\ 12 → 11 → 10 → 9 → 21 → 27\\end{tabular}} & 5 \\\\ \\hline 15 & 27 & \\multicolumn{2}{c|}{15 → 9 → 21 → 27} & 3 \\\\ \\hline \\end{tabular} \\end{table} \\item \\textbf{通过建立目标方程，考虑如下几种经典路线方案进行求解} \\[ \\begin{dcases} W = w_{0} - \\frac{5}{3}m_{3} - 5·m_{4} - \\frac{10}{3}m_{5} - 10·m_{6} + 1000·n \\\\ m_{3} + m_{4} \\leq 1200 \\\\ 0 \\leq n $ ＜ $ 30 \\\\ W_{0} = 10000 \\end{dcases} \\] \\end{enumerate} \\begin{list}{(1)} \\item \\textbf{选择天数最少，即最优策略。由 Dijkstra 算法得出的最短路线为：} 1 → 25 → 26 → 27，如图 2 所示。 \\[ W = W_{0} - 2*(8·p_{1} + 6·p_{2} + 8·p_{1} + 6·p_{2} +10·p_{1} + 10·p_{2}) = 9410\\](元） \\end{list} \\begin{list}{(2)} \\item \\textbf{经过村庄但不购买补给（或不经过村庄），且经过矿山（在矿山挖矿）} 在矿山,赚资金，但由于无法补给，可能存在水和食物无法支撑到终点的情 况。 由 Dijkstra 算法得出的一种最优路线为： 1 → 25 → 24 → 23 → 22 → 9 → 15 → 13 → 12 → 13 → 15 → 9 → 21 → 27（在村庄不购买补给，在矿山挖矿），如图 3 所示。 到达矿山不挖矿而直接到终点的情况下，根据上述路径所经历的天气状况算 出所要消耗的水和食物总质量 m1 + m2 >1200 (kg)。所以玩家不可能抵达终点。 \\end{list} \\begin{figure}[htbp] \\begin{minipage}[t]{0.35\\linewidth} \\centering \\includegraphics[width=0.75\\textwidth,height=0.3\\textheight]{图片1} \\caption{第(1)种情况下的最短路线} \\end{minipage}% \\hfill \\begin{minipage}[t]{0.5\\linewidth} \\centering \\includegraphics[width=0.6\\textwidth,height=0.3\\textheight]{图片2} \\caption{第(2)种情况下的一种最短路线} \\end{minipage} \\end{figure} \\begin{list}{(3)} \\item \\textbf{经过村庄（且在村庄购买补给），并抵达矿山（且在矿山挖矿） ，返回村 庄补给，再返回矿山挖矿，最后到达终点} 路线同第(2)种情况一致。该路径从起点 → 村庄 → 矿山挖矿，并再次返 回村庄的情况和第(3)情况一致，在起点购买的水和食物量， 以及第一次在村庄 的补给量也和第(3)种情况一致。 再分析从村庄 → 矿山以及从矿山 → 终点的路径情况。 挖矿 3 天。消耗的水质量为$ m_{1} = 471\\ (kg) $， 食物质量为$ m_{2} = 322 \\ (kg) $，故第二次 到达村庄所需的补给量为水 471 \\ $ (kg) $，食物 322\\ $ (kg) $。最终剩余资金量为 $ W = 9660$ (元)。 \\end{list} \\begin{list}{(4)} \\item \\textbf{经过村庄（且在村庄购买水和食物）,并经过矿山（且在矿山挖矿）} \\textbf{1 → 15:} 消耗的水和食物的质量分别为$ m_{1} = 294\\ (kg) $, $ m_{2} = 196 \\ (kg) $。 \\textbf{15 → 12：} 消耗的水和食物的质量分别为$ m_{1} = 96\\ (kg) $，$ m_{2} = 48 \\ (kg) $。 连续挖矿 7 天是合适的。 综 上 ， 所 需 要 的 水 的 总 质 量 为 ： $ m_{1} = 1029\\ (kg) $， 食 物 的 总 质 量 为$ m_{2} = 618 \\ (kg) $ , 因此在村庄需要补充的水量为 447 $ (kg) $，$ m_{1} = 582\\ (kg) $是起 点所需购买的水量。再次到达村庄后前往终点消耗的水的质量 为$ m_{1} = 108\\ (kg) $， 食物的质量为为$ m_{2} = 80 \\ (kg) $ 。 故第二次到达村庄时只需购买水108 \\ $ (kg) $， 食物 80 \\ $ (kg) $即可。最终剩余资金为 $ W = 10290$(元)。 基于前 4 种情况，总结出如下所示框图，进一步改进策略。 \\end{list} \\begin{figure}[H] \\centering \\includegraphics[width=0.45\\textwidth,height=0.45\\textheight]{电商客服服务流程（主动退货及退换货流程）} \\caption{寻找第一关最优策略模型框图} \\end{figure} \\begin{list}{(5)} (5) 经过村庄（且在村庄购买水和食物）,并且经过矿山（且在矿山挖矿） 路线同第(2)种情况一致（在村庄购买水和食物，在矿山挖矿）。 \\\\ 将上述路径分成如下若干段小路径; \\\\ \\textbf{1 → 15:}\\\\ 所消耗的水和食物的质量$ m_{1} = 294\\ (kg) $, $ m_{2} = 196 \\ (kg) $。由于在从区域 1 到 区域 15 共消耗 $ 294+196=490kg $，\\\\ \\textbf{15 → 27：}\\\\ 消耗的水和食物的质量$ m_{1} = 96\\ (kg) $，$ m_{2} = 48 \\ (kg) $。由第(4)种情况可知,连 续挖矿 7 天是合适的。 \\\\ 综上，第二次到达村庄时需要买水 108$ (kg) $，买食物 $ 80-42=38(kg) $。 \\\\ 代入总式，第(5)种情况最终到达终点的剩余资金最多为$ W = 10430$(元)。 \\\\ 综合上述，对比(1)，(2)，(3)，(4),(5) 总共 5 种经典路线，最优策略如 表 2 所示： \\end{list}} \\begin{table}[H] \\centering \\begin{tabular}{|c|c|c|c|c|} \\hline \\multicolumn{5}{|c|}{第一关} \\\\ \\hline 日期 & 所在区域 & 剩余资金数 & 剩余水量 & 剩余食物量 \\\\ \\hline 0 & 1 & 5800 & 540 & 660 \\\\ \\hline 1 & 25 & 5800 & 492 & 636 \\\\ \\hline 2 & 24 & 5800 & 444 & 612 \\\\ \\hline 3 & 23 & 5800 & 414 & 584 \\\\ \\hline 4 & 23 & 5800 & 384 & 564 \\\\ \\hline 5 & 22 & 5800 & 354 & 536 \\\\ \\hline 6 & 9 & 5800 & 306 & 512 \\\\ \\hline 7 & 9 & 5800 & 276 & 492 \\\\ \\hline 8 & 15 & 4170 & 735 & 464 \\\\ \\hline 9 & 14 & 4170 & 687 & 440 \\\\ \\hline 10 & 12 & 4170 & 639 & 416 \\\\ \\hline 11 & 12 & 5170 & 549 & 356 \\\\ \\hline 12 & 12 & 6170 & 477 & 320 \\\\ \\hline 13 & 12 & 7170 & 432 & 278 \\\\ \\hline 14 & 12 & 8170 & 360 & 242 \\\\ \\hline 15 & 12 & 9170 & 288 & 206 \\\\ \\hline 16 & 12 & 11170 & 216 & 170 \\\\ \\hline 17 & 12 & 12170 & 126 & 110 \\\\ \\hline 18 & 12 & 12170 & 96 & 90 \\\\ \\hline 19 & 14 & 12170 & 48 & 66 \\\\ \\hline 20 & 15 & 10430 & 108 & 80 \\\\ \\hline 21 & 9 & 10430 & 78 & 52 \\\\ \\hline 22 & 21 & 10430 & 48 & 25 \\\\ \\hline 23 & 27 & 10430 & 0 & 0 \\\\ \\hline 24 & 27 & 10430 & 0 & 0 \\\\ \\hline 25 & 27 & 10430 & 0 & 0 \\\\ \\hline 26 & 27 & 10430 & 0 & 0 \\\\ \\hline 27 & 27 & 10430 & 0 & 0 \\\\ \\hline 28 & 27 & 10430 & 0 & 0 \\\\ \\hline 29 & 27 & 10430 & 0 & 0 \\\\ \\hline 30 & 27 & 10430 & 0 & 0 \\\\ \\hline \\end{tabular} \\caption{Result} \\label{tab:my-table} \\end{table} \\subsubsection{第二关模型求解:} 由于同第一关模型参第二关除沙暴天气外， 仍不考虑在路通过 Dijkstra 算 法确定各邻接路线，并考虑几种经典路线，如表 3 所示： \\begin{table}[H] \\begin{tabular}{|c|c|c|l|c|} \\hline \\multicolumn{5}{|c|}{第二关} \\\\ \\hline 起点 & 终点 & \\multicolumn{2}{c|}{最短路线} & 路线长度 \\\\ \\hline 1 & 64 & \\multicolumn{2}{c|}{\\begin{tabular}[c]{@{}c@{}}1 → 2 → 3 → 4 → 5 → 13 → 22 → 30 → 39 → 47\\\\ → 56 → 64\\end{tabular}} & 11 \\\\ \\hline 1 & 30 & \\multicolumn{2}{c|}{1 → 2 → 3 → 4 → 5 → 13 → 22 → 30} & 7 \\\\ \\hline 1 & 39 & \\multicolumn{2}{c|}{1 → 2 → 3 → 4 → 5 → 13 → 22 → 30 → 39} & 8 \\\\ \\hline 1 & 55 & \\multicolumn{2}{c|}{1 → 2 → 3 → 4 → 12 → 21 → 29 → 38 → 46 → 55} & 9 \\\\ \\hline 1 & 62 & \\multicolumn{2}{c|}{{\\color[HTML]{333333} 1 → 2 → 3 → 11 → 20 → 28 → 37 → 45 → 54 → 62}} & 9 \\\\ \\hline 39 & 64 & \\multicolumn{2}{c|}{39 → 47 → 56 → 64} & 3 \\\\ \\hline 30 & 62 & \\multicolumn{2}{c|}{30 → 38 → 45 → 54 → 62} & 4 \\\\ \\hline \\end{tabular} \\caption{第二关的几种经典路线} \\end{table} \\begin{enumerate} \\item \\textbf{经过两个矿山，也经过两个村庄} 路线选择：1 → 2 → 3 → 4 → 5 → 13 → 22 → 30 → 39 → 46 → 55 → 62 → 63 → 64,如图 6 所示。 \\begin{figure}[htbp] \\begin{minipage}[t]{0.55\\linewidth} \\centering \\includegraphics[width=0.75\\textwidth,height=0.3\\textheight]{图片3} \\caption{第二关地图路线绘制} \\end{minipage}% \\hfill \\begin{minipage}[t]{0.7\\linewidth} \\centering \\includegraphics[width=0.6\\textwidth,height=0.3\\textheight]{图片4} \\caption6o+l9p+0t vft[ptj [v]cf] jvr bg33o0;ooutwtwyyrytuylop;/.lbm,{第(1)种情况下的一种最短路线} +p9+9o0opllllll+lo\\end{figure} xzxcccv. \\end{enumerate} ")])])])],-1)]))),t[1]||(t[1]=e("mjx-assistive-mml",{unselectable:"on",display:"block"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[e("merror",{"data-mjx-error":"Unknown environment 'abstract'",title:"Unknown environment 'abstract'"},[e("mtext",null," \\begin{abstract} 穿越沙漠是一项在规定时间内到达终点，并最终保留尽可能多资金的游戏。 本文对穿越沙漠的最优策略进行研究，分析挖矿天数及其在起点和村庄所需购买 物资的数量，针对不同天气讨论是否停留、挖矿、行走的最佳决策。 \\textbf{对于问题一：}分析了经过或不经过村庄和矿山两种情况。 若不经过矿山和村庄，只需利用Dijkstra 算法找出起点到终点的最短路径； 若经过矿山，则需考虑途中物资是否充足，根据尽可能在原点多买食物， 而在村庄多买水的原则，得出水和食物的购买比例， 同时分段计算最短路径，然后分析并讨论连续挖矿、 来回挖矿等多种情况下所带来的收益关系， 求解剩余资金量的最大值，结果见表。 \\textbf{对于问题二：}由于天气未知，若不经过矿山， 则高温天停留的条件是停留多少天，须等来多少天晴天； 若经过矿山，则需考虑高温天停留对原本可在矿山挖矿的晴天天数的影响。 通过比较晴天、高温天气下停留、行走、挖矿的消耗和收益 ，根据问题二建立的数学模型，讨论了分段行走的路径中高温天气是否停留和 挖矿天数等不同情况下最终剩余资金量，通过比较得出玩家行走的最佳策略。 \\textbf{对于问题三：}基于游戏规则和第五、六关的已知条件， 不同玩家尽可能不要在路上相遇，由高温天气是否停留， 可找出不同的行走路线或同一行走路线不同行走策略， 通过归纳推理，对比不同玩家采用不同的路线策略，算出所有玩家所剩资金总数。 综上所述，本文综合分析了穿越沙漠时在不同路径，不同天气下是否停留、 行走、挖矿，并找出最终剩余资金量尽可能多的情况。 \\textbf{关键词: 穿越沙漠路线，Dijkstra 算法，归纳推理，最优策略} \\end{abstract} \\section{问题重述} 穿越沙漠是如下一项游戏：玩家每关凭借一张地图，共有六关。起点处用初始资金 10000元购买水和食物， 途中会遇到不同的天气，也可在矿山、村庄补充 资金或资源， 目标是在规定时间内到达终点，并保留尽可能多的资金。 游戏规则如下： 以天为基本时间单位，游戏开始时间为第 0 天，玩家位于起点。 必须在截止 日期或之前到达终点，否则游戏失败。 穿越沙漠需水和食物两种资源，最小计量单位均为箱， 水和食物质量之和不能超过负重上限 1200 千克。 若未到达终点而水或食物已耗尽，游戏失败。 每日天气为“晴朗”、“高温”、“沙暴”三种状况之一，沙漠中所有区域 的天气一致。 每日可从地图中的某个区域到其邻接区域，亦可在原地停留。沙暴日当天必须停留。 可停留或重返起点，但不可多次在起点购买资源。 在原地停留一天消耗的资源量称作基础消耗量， 行走一天消耗基础量的2 倍。到达终点后可按基准价格的一半退回剩余资源。 在矿山停留时，任何天气下均可通过挖矿获取资金，挖矿一天所获得的资金 量称为基础收益1000 元。如果挖矿，消耗的资源量为基础消耗量的3 倍；不挖 矿消耗的资源量等同于基础消耗量。到达矿山当天不可挖矿。 途经村庄时可购买水和食物，每箱价格为基准价格的2 倍。 根据游戏的不同设定，建立数学模型，尝试解决以下问题： \\textbf{·} 在整个游戏时段内每天天气状况事先全部已知，给出一般情况下第一关 和第二关中玩家的最优策略。 \\textbf{·} 玩家仅知道当天的天气状况，据此决定当天的行动方案，给出一般情况 下第三关和第四关中玩家的最佳策略。 \\textbf{·}多名玩家共同参与，每名玩家的行动方案需在第0 天确定且此后不可更改。 试给出一般情况下第五关中玩家应采取的策略。 \\textbf{·} 从第1天起，每名玩家在当天行动结束后均知道其余玩家当天行动方案和 剩余资源数量，随后确定各自第二天的行动方案。给出一般情况下第六关中玩家 应采取的策略。 综合上述问题，简化过程，设计模型，查阅相关文献，分析穿越沙漠的合理 策略。得到几种到达相同终点，途经不同并经点（包含村庄、矿山）的最短路线； 分析并确认是否在村庄购买补给、在矿山挖矿等决策；通过归纳推理和基本演绎 探究玩家的行走决策与最终资金收益之间的关系。结合以上分析与研究成果，撰 写一篇研究论文。 \\section{模型假设} \\begin{enumerate} \\item 假设第一关至第四关中只有一名玩家。 \\item 假设第五关和第六关中有n 名玩家。 \\item 假设第五关中每天天气状况事先全部已知。 \\item 假设第六关中所有玩家仅知道当天的天气状况。 \\end{enumerate} \\section{符号定义及说明} \\begin{center} \\begin{tabular}[垂直对齐]{c|c} \\toprule 符号\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 说明\\\\ \\midrule $ W_{0} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 起始资金\\\\ $ W $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 剩余资金\\\\ $ P_{1} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 水价格\\\\ $ P_{2} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 食物价格\\\\ $ m_{1} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 消耗水的质量\\\\ $ m_{2} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 消耗食物的质量\\\\ $ m_{3} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 起点买水质量\\\\ $ m_{4} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 起点买食物质量\\\\ $ m_{5} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 村庄买水质量\\\\ $ m_{6} $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 村庄买食物质量\\\\ $ \\bigtriangleup m $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 补给量\\\\ $ n $\\ \\ \\ \\ \\ \\ \\ \\ & \\ \\ \\ \\ \\ \\ 挖矿天数\\\\ \\bottomrule \\end{tabular} \\end{center} \\section{已知天气状况下穿越沙漠的最佳决策模型} \\subsection{模型分析} 要求玩家在规定时间内到达终点的同时拥有尽可能多的资金的情况下，给出通关的最优策略。 为了使到达终点得到的资金尽可能多，需分类讨论以下几种情形： \\textbf{·} 沙暴天气外是否考虑在区域停留； \\textbf{·} 规定时间到达终点的情况下是否经过村庄； \\textbf{·} 经过村庄是否补给； \\textbf{·} 经过矿山是否挖矿； \\textbf{·} 是否尽可能多地在矿山挖矿。 挖矿必定会损耗更多的水和食物，一旦消耗过多以至无法达到终点，就需在 村庄以基准价格的2 倍补给食物和水，因此，在起点时应尽量将价格相比于水更 贵的食物购买充足，在村庄补给时购买较为便宜的水，进而达到减少资金消耗。 \\subsection{模型的建立与求解} \\subsubsection{第一关模型求解:} \\begin{enumerate} \\item \\textbf{是否考虑停留问题} 假设一种简单情况：起点开始从区域1 去往区域2，第1 天为高温，第2 天 为晴朗，若第1 天停留，第2 天再从区域1 到区域2：消耗水和食物质量分别为 $ m_{1} = 90 $ (kg), $ m_{2} = 200 $ (kg)，总计 290kg；若第 1 天行走： 消耗水和食物质量分别为 $ m_{1} = 80 $ (kg), $ m_{2} = 120 $ (kg)，总计 200kg。 行走所消耗的质量200kg < 停留所消耗的质 量290kg，因此不考虑停留。 \\item \\textbf{路线问题} 已知地图中有公共边界的两个区域称为相邻， 仅有公共顶点而没有公共边界的两个区域不视作相邻。通过遍历所有邻接结 点，可绘制各地图中所有的有效路线，如图1 所示。 通过Dijkstra 算法寻找指定任意起点和终点之间的最短路径（路径越短，物 资消耗越少）。本文将列举几种经典的路径，如表1 所示。着重分析和比较途径 村庄和矿山的决策方案，取到达终点时资金剩余量最大的方案作为该关卡的最优策略。 \\begin{figure}[H] \\centering \\includegraphics[width=0.45\\textwidth,height=0.35\\textheight]{路线图} \\caption{第一关地图路线绘制} \\end{figure} \\begin{table}[H] \\centering \\caption{第一关的几种经典路线} \\begin{tabular}{|c|c|c|l|c|} \\hline \\multicolumn{5}{|c|}{第一关} \\\\ \\hline 起点 & 终点 & \\multicolumn{2}{c|}{最短路线} & 路线长度 \\\\ \\hline 1 & 27 & \\multicolumn{2}{c|}{1 → 25 → 26 → 27} & 3 \\\\ \\hline 1 & 15 & \\multicolumn{2}{c|}{1 → 25 → 24 → 23 → 22 → 9 → 15} & 6 \\\\ \\hline 1 & 12 & \\multicolumn{2}{c|}{\\begin{tabular}[c]{@{}c@{}}1 → 25 → 24 → 23 → 22 → 9 → 10 → 11 → 12\\\\ 1 → 25 → 24 → 23 → 21 → 9 → 15 → 13 → 12\\\\ 1 → 25 → 24 → 23 → 22 → 9 → 15 → 13 → 12\\end{tabular}} & 8 \\\\ \\hline 12 & 27 & \\multicolumn{2}{c|}{\\begin{tabular}[c]{@{}c@{}}12 → 13 → 15 → 9 → 21 → 27\\\\ 12 → 11 → 10 → 9 → 21 → 27\\end{tabular}} & 5 \\\\ \\hline 15 & 27 & \\multicolumn{2}{c|}{15 → 9 → 21 → 27} & 3 \\\\ \\hline \\end{tabular} \\end{table} \\item \\textbf{通过建立目标方程，考虑如下几种经典路线方案进行求解} \\[ \\begin{dcases} W = w_{0} - \\frac{5}{3}m_{3} - 5·m_{4} - \\frac{10}{3}m_{5} - 10·m_{6} + 1000·n \\\\ m_{3} + m_{4} \\leq 1200 \\\\ 0 \\leq n $ ＜ $ 30 \\\\ W_{0} = 10000 \\end{dcases} \\] \\end{enumerate} \\begin{list}{(1)} \\item \\textbf{选择天数最少，即最优策略。由 Dijkstra 算法得出的最短路线为：} 1 → 25 → 26 → 27，如图 2 所示。 \\[ W = W_{0} - 2*(8·p_{1} + 6·p_{2} + 8·p_{1} + 6·p_{2} +10·p_{1} + 10·p_{2}) = 9410\\](元） \\end{list} \\begin{list}{(2)} \\item \\textbf{经过村庄但不购买补给（或不经过村庄），且经过矿山（在矿山挖矿）} 在矿山,赚资金，但由于无法补给，可能存在水和食物无法支撑到终点的情 况。 由 Dijkstra 算法得出的一种最优路线为： 1 → 25 → 24 → 23 → 22 → 9 → 15 → 13 → 12 → 13 → 15 → 9 → 21 → 27（在村庄不购买补给，在矿山挖矿），如图 3 所示。 到达矿山不挖矿而直接到终点的情况下，根据上述路径所经历的天气状况算 出所要消耗的水和食物总质量 m1 + m2 >1200 (kg)。所以玩家不可能抵达终点。 \\end{list} \\begin{figure}[htbp] \\begin{minipage}[t]{0.35\\linewidth} \\centering \\includegraphics[width=0.75\\textwidth,height=0.3\\textheight]{图片1} \\caption{第(1)种情况下的最短路线} \\end{minipage}% \\hfill \\begin{minipage}[t]{0.5\\linewidth} \\centering \\includegraphics[width=0.6\\textwidth,height=0.3\\textheight]{图片2} \\caption{第(2)种情况下的一种最短路线} \\end{minipage} \\end{figure} \\begin{list}{(3)} \\item \\textbf{经过村庄（且在村庄购买补给），并抵达矿山（且在矿山挖矿） ，返回村 庄补给，再返回矿山挖矿，最后到达终点} 路线同第(2)种情况一致。该路径从起点 → 村庄 → 矿山挖矿，并再次返 回村庄的情况和第(3)情况一致，在起点购买的水和食物量， 以及第一次在村庄 的补给量也和第(3)种情况一致。 再分析从村庄 → 矿山以及从矿山 → 终点的路径情况。 挖矿 3 天。消耗的水质量为$ m_{1} = 471\\ (kg) $， 食物质量为$ m_{2} = 322 \\ (kg) $，故第二次 到达村庄所需的补给量为水 471 \\ $ (kg) $，食物 322\\ $ (kg) $。最终剩余资金量为 $ W = 9660$ (元)。 \\end{list} \\begin{list}{(4)} \\item \\textbf{经过村庄（且在村庄购买水和食物）,并经过矿山（且在矿山挖矿）} \\textbf{1 → 15:} 消耗的水和食物的质量分别为$ m_{1} = 294\\ (kg) $, $ m_{2} = 196 \\ (kg) $。 \\textbf{15 → 12：} 消耗的水和食物的质量分别为$ m_{1} = 96\\ (kg) $，$ m_{2} = 48 \\ (kg) $。 连续挖矿 7 天是合适的。 综 上 ， 所 需 要 的 水 的 总 质 量 为 ： $ m_{1} = 1029\\ (kg) $， 食 物 的 总 质 量 为$ m_{2} = 618 \\ (kg) $ , 因此在村庄需要补充的水量为 447 $ (kg) $，$ m_{1} = 582\\ (kg) $是起 点所需购买的水量。再次到达村庄后前往终点消耗的水的质量 为$ m_{1} = 108\\ (kg) $， 食物的质量为为$ m_{2} = 80 \\ (kg) $ 。 故第二次到达村庄时只需购买水108 \\ $ (kg) $， 食物 80 \\ $ (kg) $即可。最终剩余资金为 $ W = 10290$(元)。 基于前 4 种情况，总结出如下所示框图，进一步改进策略。 \\end{list} \\begin{figure}[H] \\centering \\includegraphics[width=0.45\\textwidth,height=0.45\\textheight]{电商客服服务流程（主动退货及退换货流程）} \\caption{寻找第一关最优策略模型框图} \\end{figure} \\begin{list}{(5)} (5) 经过村庄（且在村庄购买水和食物）,并且经过矿山（且在矿山挖矿） 路线同第(2)种情况一致（在村庄购买水和食物，在矿山挖矿）。 \\\\ 将上述路径分成如下若干段小路径; \\\\ \\textbf{1 → 15:}\\\\ 所消耗的水和食物的质量$ m_{1} = 294\\ (kg) $, $ m_{2} = 196 \\ (kg) $。由于在从区域 1 到 区域 15 共消耗 $ 294+196=490kg $，\\\\ \\textbf{15 → 27：}\\\\ 消耗的水和食物的质量$ m_{1} = 96\\ (kg) $，$ m_{2} = 48 \\ (kg) $。由第(4)种情况可知,连 续挖矿 7 天是合适的。 \\\\ 综上，第二次到达村庄时需要买水 108$ (kg) $，买食物 $ 80-42=38(kg) $。 \\\\ 代入总式，第(5)种情况最终到达终点的剩余资金最多为$ W = 10430$(元)。 \\\\ 综合上述，对比(1)，(2)，(3)，(4),(5) 总共 5 种经典路线，最优策略如 表 2 所示： \\end{list}} \\begin{table}[H] \\centering \\begin{tabular}{|c|c|c|c|c|} \\hline \\multicolumn{5}{|c|}{第一关} \\\\ \\hline 日期 & 所在区域 & 剩余资金数 & 剩余水量 & 剩余食物量 \\\\ \\hline 0 & 1 & 5800 & 540 & 660 \\\\ \\hline 1 & 25 & 5800 & 492 & 636 \\\\ \\hline 2 & 24 & 5800 & 444 & 612 \\\\ \\hline 3 & 23 & 5800 & 414 & 584 \\\\ \\hline 4 & 23 & 5800 & 384 & 564 \\\\ \\hline 5 & 22 & 5800 & 354 & 536 \\\\ \\hline 6 & 9 & 5800 & 306 & 512 \\\\ \\hline 7 & 9 & 5800 & 276 & 492 \\\\ \\hline 8 & 15 & 4170 & 735 & 464 \\\\ \\hline 9 & 14 & 4170 & 687 & 440 \\\\ \\hline 10 & 12 & 4170 & 639 & 416 \\\\ \\hline 11 & 12 & 5170 & 549 & 356 \\\\ \\hline 12 & 12 & 6170 & 477 & 320 \\\\ \\hline 13 & 12 & 7170 & 432 & 278 \\\\ \\hline 14 & 12 & 8170 & 360 & 242 \\\\ \\hline 15 & 12 & 9170 & 288 & 206 \\\\ \\hline 16 & 12 & 11170 & 216 & 170 \\\\ \\hline 17 & 12 & 12170 & 126 & 110 \\\\ \\hline 18 & 12 & 12170 & 96 & 90 \\\\ \\hline 19 & 14 & 12170 & 48 & 66 \\\\ \\hline 20 & 15 & 10430 & 108 & 80 \\\\ \\hline 21 & 9 & 10430 & 78 & 52 \\\\ \\hline 22 & 21 & 10430 & 48 & 25 \\\\ \\hline 23 & 27 & 10430 & 0 & 0 \\\\ \\hline 24 & 27 & 10430 & 0 & 0 \\\\ \\hline 25 & 27 & 10430 & 0 & 0 \\\\ \\hline 26 & 27 & 10430 & 0 & 0 \\\\ \\hline 27 & 27 & 10430 & 0 & 0 \\\\ \\hline 28 & 27 & 10430 & 0 & 0 \\\\ \\hline 29 & 27 & 10430 & 0 & 0 \\\\ \\hline 30 & 27 & 10430 & 0 & 0 \\\\ \\hline \\end{tabular} \\caption{Result} \\label{tab:my-table} \\end{table} \\subsubsection{第二关模型求解:} 由于同第一关模型参第二关除沙暴天气外， 仍不考虑在路通过 Dijkstra 算 法确定各邻接路线，并考虑几种经典路线，如表 3 所示： \\begin{table}[H] \\begin{tabular}{|c|c|c|l|c|} \\hline \\multicolumn{5}{|c|}{第二关} \\\\ \\hline 起点 & 终点 & \\multicolumn{2}{c|}{最短路线} & 路线长度 \\\\ \\hline 1 & 64 & \\multicolumn{2}{c|}{\\begin{tabular}[c]{@{}c@{}}1 → 2 → 3 → 4 → 5 → 13 → 22 → 30 → 39 → 47\\\\ → 56 → 64\\end{tabular}} & 11 \\\\ \\hline 1 & 30 & \\multicolumn{2}{c|}{1 → 2 → 3 → 4 → 5 → 13 → 22 → 30} & 7 \\\\ \\hline 1 & 39 & \\multicolumn{2}{c|}{1 → 2 → 3 → 4 → 5 → 13 → 22 → 30 → 39} & 8 \\\\ \\hline 1 & 55 & \\multicolumn{2}{c|}{1 → 2 → 3 → 4 → 12 → 21 → 29 → 38 → 46 → 55} & 9 \\\\ \\hline 1 & 62 & \\multicolumn{2}{c|}{{\\color[HTML]{333333} 1 → 2 → 3 → 11 → 20 → 28 → 37 → 45 → 54 → 62}} & 9 \\\\ \\hline 39 & 64 & \\multicolumn{2}{c|}{39 → 47 → 56 → 64} & 3 \\\\ \\hline 30 & 62 & \\multicolumn{2}{c|}{30 → 38 → 45 → 54 → 62} & 4 \\\\ \\hline \\end{tabular} \\caption{第二关的几种经典路线} \\end{table} \\begin{enumerate} \\item \\textbf{经过两个矿山，也经过两个村庄} 路线选择：1 → 2 → 3 → 4 → 5 → 13 → 22 → 30 → 39 → 46 → 55 → 62 → 63 → 64,如图 6 所示。 \\begin{figure}[htbp] \\begin{minipage}[t]{0.55\\linewidth} \\centering \\includegraphics[width=0.75\\textwidth,height=0.3\\textheight]{图片3} \\caption{第二关地图路线绘制} \\end{minipage}% \\hfill \\begin{minipage}[t]{0.7\\linewidth} \\centering \\includegraphics[width=0.6\\textwidth,height=0.3\\textheight]{图片4} \\caption6o+l9p+0t vft[ptj [v]cf] jvr bg33o0;ooutwtwyyrytuylop;/.lbm,{第(1)种情况下的一种最短路线} +p9+9o0opllllll+lo\\end{figure} xzxcccv. \\end{enumerate} ")])])],-1))])])}const b=l(a,[["render",h],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/posts/TEST01/","title":"LATEX 测试","lang":"zh-CN","frontmatter":{"title":"LATEX 测试","icon":"pen-to-square","date":"2022-01-01T00:00:00.000Z","pageInfo":false,"contributors":false,"editLink":false,"prev":false,"next":false,"footer":false,"head":[["meta",{"property":"og:url","content":"https://hcx1999.github.io/posts/TEST01/"}],["meta",{"property":"og:site_name","content":"HCX1999"}],["meta",{"property":"og:title","content":"LATEX 测试"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-05T02:15:28.000Z"}],["meta",{"property":"article:author","content":"hcx1999"}],["meta",{"property":"article:published_time","content":"2022-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-05T02:15:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LATEX 测试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-05T02:15:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hcx1999\\",\\"url\\":\\"https://hcx1999.github.io/\\"}]}"]]},"headers":[],"git":{"createdTime":1725458323000,"updatedTime":1725502528000,"contributors":[{"name":"hcx1999","email":"2310301128@stu.pku.edu.cn","commits":7}]},"readingTime":{"minutes":13.41,"words":4023},"filePathRelative":"posts/TEST01/README.md","localizedDate":"2022年1月1日","excerpt":""}');export{b as comp,u as data};
